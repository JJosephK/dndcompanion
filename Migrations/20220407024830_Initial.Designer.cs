// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dnd.Models;

namespace dnd.Migrations
{
    [DbContext(typeof(CharacterContext))]
    [Migration("20220407024830_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("dnd.Models.Alignments.Alignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lawful Good"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Neutral Good"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chaotic Good"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lawful Neutral"
                        },
                        new
                        {
                            Id = 5,
                            Name = "True Neutral"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chaotic Neutral"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Lawful Evil"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Neutral Evil"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Chaotic Evil"
                        });
                });

            modelBuilder.Entity("dnd.Models.Characters.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CharacterAlignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterBackground")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CharacterClassId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterLevel")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CharacterRaceId")
                        .HasColumnType("int");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.HasIndex("CharacterClassId");

                    b.HasIndex("CharacterRaceId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("dnd.Models.Classes.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Barbarian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bard"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cleric"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Druid"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fighter"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Monk"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Paladin"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ranger"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Rogue"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sorcerer"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Warlock"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Wizard"
                        });
                });

            modelBuilder.Entity("dnd.Models.Races.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dragonborn"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dwarf"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Elf"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gnome"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Half-Elf"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Halfling"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Half-Orc"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Human"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Tiefling"
                        });
                });

            modelBuilder.Entity("dnd.Models.Session.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = false,
                            Name = "John Smith",
                            Password = "password",
                            Username = "user"
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = true,
                            Name = "Admin Sawyer",
                            Password = "password",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("dnd.Models.Characters.Character", b =>
                {
                    b.HasOne("dnd.Models.Classes.Class", "CharacterClass")
                        .WithMany()
                        .HasForeignKey("CharacterClassId");

                    b.HasOne("dnd.Models.Races.Race", "CharacterRace")
                        .WithMany()
                        .HasForeignKey("CharacterRaceId");

                    b.Navigation("CharacterClass");

                    b.Navigation("CharacterRace");
                });
#pragma warning restore 612, 618
        }
    }
}
